<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charSet="utf-8"/>
	    <meta name="viewport" content="width=device-width, initial-scale=1"/>
	    <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.16/webfont.js"></script>
	    <script>
	      WebFont.load({
	        google: {
	          families: ['Open+Sans:400italic,700,400:latin,latin-ext']
	        }
	      });
	    </script>
		<link rel="shortcut icon" href="/static/media/favicon.png" type="image/x-icon" />
		<link rel="apple-touch-icon-precomposed" sizes="152x152" href="/static/media/apple-touch-icon.png"/>
		<link rel="apple-touch-icon-precomposed" sizes="120x120" href="/static/media/apple-touch-icon.png"/>
		<link rel="apple-touch-icon-precomposed" sizes="76x76" href="/static/media/apple-touch-icon.png"/>
		<link rel="apple-touch-icon-precomposed" href="/static/media/apple-touch-icon.png"/>
		<link rel="stylesheet" type="text/css" href="/bundle/pancake.min.css"/>
		<link rel="stylesheet" type="text/css" href="/bundle/application.css"/>
		<link rel="stylesheet" type="text/css" href="/bundle/main.css"/>
	    <script async src="//www.google-analytics.com/analytics.js"></script>
	    <script async src="bundle/autotrack.custom.js"></script>
	    <script>
	        window.ga = window.ga || function () {
	                (ga.q = ga.q || []).push(arguments)
	            };
	        ga.l = +new Date;
			<% if (settings.env === 'development') { %>
			   ga('create', 'UA-72722909-6', 'auto');
			 <% } else{ %>  
			   ga('create', 'UA-72722909-5', 'auto');
			<% } %>
	        ga('send', 'pageview');

	        ga('require', 'outboundLinkTracker', {
	            shouldTrackOutboundLink: function (link, parseUrl) {
	                var href = link.getAttribute('href') || link.getAttribute('xlink:href');
	                var url = parseUrl(href);
	                var isExternal = (url.hostname != location.hostname && url.protocol.slice(0, 4) == 'http');

	                // treat downloads as external links
	                var exts = 'doc*|xls*|ppt*|pdf|zip|rar|exe|mp3';
	                var regExt = new RegExp(".*\\.(" + exts + ")(\\?.*)?$");
	                var isDownload = url.pathname.match(regExt);

	                return isDownload || isExternal;
	            }
	        });
	        ga('require', 'urlChangeTracker');
	    </script>
	</head>
	<body>
		<div id="appReact"></div>
		<script src="bundle/build.js"></script>
	</body>
</html>