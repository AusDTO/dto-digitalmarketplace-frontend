$gov-ui-kit-image-base-url: "https://gov-au-ui-kit.apps.staging.digital.gov.au/latest/img/";
@import "gov-au-ui-kit/assets/sass/ui-kit";


// Grid system
// --------------------------------------------------

// Number of columns in the grid system
$grid-columns:               12;
// Padding, to be divided by two and applied to the left and right of all columns
$gutter:                     golden-ratio(1em, 1);

$max-width:                  1200px;


// Responsive Breakpoints
// ------------------------------------------------------

$screen-xs:                  480px !default;
$screen-xs-min:              $screen-xs !default;
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
// Note: Deprecated $screen-sm and $screen-tablet as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
// Note: Deprecated $screen-md and $screen-desktop as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
// Note: Deprecated $screen-lg and $screen-lg-desktop as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
$screen-lg-desktop:          $screen-lg-min !default;
$max-width:                  $screen-lg;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;


// Grid Mixins

// Create the grid for a given size
// This will loop over the number of columns and create a css class
// for each. If it's the last gride size, then let's not add a float
@mixin grid-core($size) {
  @for $i from 1 through $grid-columns {
    .col-#{$size}-#{$i} {
      // Ignore float for the largest grid size
      @if $i < $grid-columns {
        float: left;
      }
      @include span-columns($i);
    }

    // If it's not the screen-xs, then let's add push and pull helper classes
    @if $size != "xs" {
      .col-#{$size}-push-#{$i} {
        left: flex-grid($i, $grid-columns) + flex-gutter($grid-columns);
      }
      .col-#{$size}-pull-#{$i} {
        right: flex-grid($i, $grid-columns) + flex-gutter($grid-columns);
      }
    }
  }
}


// Main containers
.container {
  @include outer-container;
}


// Rows
.row {
  @include row();
}

// A basic column without a defined width or height
.col {
  float: left;
  display: inline-block;
}


// Common styles for small and large grid columns
.col-xs-1,
.col-xs-2,
.col-xs-3,
.col-xs-4,
.col-xs-5,
.col-xs-6,
.col-xs-7,
.col-xs-8,
.col-xs-9,
.col-xs-10,
.col-xs-11,
.col-xs-12,
.col-sm-1,
.col-sm-2,
.col-sm-3,
.col-sm-4,
.col-sm-5,
.col-sm-6,
.col-sm-7,
.col-sm-8,
.col-sm-9,
.col-sm-10,
.col-sm-11,
.col-sm-12,
.col-md-1,
.col-md-2,
.col-md-3,
.col-md-4,
.col-md-5,
.col-md-6,
.col-md-7,
.col-md-8,
.col-md-9,
.col-md-10,
.col-md-11,
.col-md-12,
.col-lg-1,
.col-lg-2,
.col-lg-3,
.col-lg-4,
.col-lg-5,
.col-lg-6,
.col-lg-7,
.col-lg-8,
.col-lg-9,
.col-lg-10,
.col-lg-11,
.col-lg-12 {
  position: relative;
  // Prevent columns from collapsing when empty
  min-height: 1px;
}


// Create the Extra small grid
@include grid-core(xs);

// Create the small grid
@include media(min-width $screen-sm) {
  .container {
    max-width: $screen-sm;
  }
  @include grid-core(sm);
}


// Create the medium grid
@include media(min-width $screen-md) {
  .container {
    max-width: $screen-md;
  }
  @include grid-core(md);
}


// Create the large grid
@include media(min-width $screen-lg) {
  .container {
    @include outer-container;
  }
  @include grid-core(lg);
}

form {
  .validation-message {
    color: $error-colour;
    display: block;
    font-size: rem(14);
    font-weight: $base-font-weight;
    border: 0;

    &:hover, &:active, &:focus {
      background: none;
    }

    span {
      display: block;
    }
  }
}

.validation-masthead-heading, #validation-masthead-heading {
  margin: 0 0 1.6rem;
}


.field {
  list-style: none;
  margin: $base-spacing 0;
  padding: 0;

  label:last-child  {
    margin: 0;
  }
  

  label {
    font-size: 1em;
  }
  p {
    font-size: 0.75em;
  }
}

 .title-block {
  &__name {
    margin-bottom: 0.3em;
  }
  &__role {
    color: $grey;
  }

 }

.bordered-list {
  margin: 0 0 1em;
  padding: 0;
  border-top: solid 1px #979797;

  &__item {
    list-style: none;
    margin: 0;
    border-bottom: solid 1px #979797;
    padding: 1rem 0;

    p {
      margin: 0;
    }
  }
}


.progress-bar {
  height: 25px;
  background: #f0f3f5;
  border-radius: 4px;

  &__progress {
    height: 25px;
    border-radius: 4px;
    background: #f9c642;
    transition: width 0.5s ease;
  }
  &--max {
    background: #007554;
  }
}

#casestudy__view {
  .sidebar {
    float: left;
    margin: 0 2.04556% 0 0;
  }

  .actions {
    text-align: right;
    @include link-colours($non-black, $light-aqua, $non-black);

    @include media(max-width $screen-sm) {
      text-align: left;
    }

    a {
      display: inline-block;

      &:first-of-type {
        margin-right: 1em;
      }
    }
  }

  article {
    @include link-colours($non-black, $light-aqua, $non-black);
  }

  header {
    border-bottom: 1px solid #cecece;

    h2 {
      margin-bottom: 0;
    }
  }
  .project ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
}

.casestudy-wrapper {
  width: 100%;
}


.local-nav[aria-expanded='false'] {
  height: 0;
  padding-top: 0;
  padding-bottom: 0;
}

@media screen and (min-width: $screen-sm) {
  .local-nav[aria-expanded='false'] {
    height: auto;
    padding: 0 0 1.6em;
  }
  .local-nav-toggle {
    display: none;
  }
}

.local-nav-toggle {
  position: relative;
  width: 100%;
  margin: 0;
  text-align: left;
  font-weight: 400;
  border: 0;
  background-color: #f0f3f5;
  color: #115361;
  padding: $small-spacing $medium-spacing;

  &:hover {
    background-color: #f0f3f5;
    color: #115361;
  }

  &::before {
    content: ' ';
    position: absolute;
    top: .5em;
    bottom: .5em;
    right: 0.8em;
    width: 1.2em;
    background-repeat: no-repeat;
    background-size: 100% auto;
    background-position: center center;
    -webkit-transform: rotate(0deg);
          transform: rotate(0deg);
  -webkit-transition: -webkit-transform 0.2s ease-in-out;
  transition: -webkit-transform 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out;
  transition: transform 0.2s ease-in-out, -webkit-transform 0.2s ease-in-out;
  }

  &[aria-expanded='true']::before {
    transform: rotate(180deg);
  }
}

// Hide visually and from screen readers: h5bp.com/u
.hidden {
  display: none !important;
  visibility: hidden;
}

// Hide visually and from screen readers, but maintain layout
.invisible {
  visibility: hidden;
}

// Hide only visually, but have it available for screen readers: h5bp.com/v
.visuallyhidden,
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;

  // Allow .visuallyhidden element to be focusable via the keyboard: h5bp.com/p
  &:active,
  &:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
  }
}

.seller-profile {

  h1 {
    margin: 0;
  }

  &__badges {
    margin: 0 0 1.25rem;
    span {
      font-size: 12px;
      margin-left: 5px;
      &:first-of-type {
        margin-left: 0;
      }
    }
  }

  &__row {
    margin-bottom: 3em;

    ul {
      margin-top: 0;
    }

    &:last-of-type {
      margin: 0;
    }
  }

  &__tile {
    border: solid 1px rgba(23, 120, 141, 0.5);
    box-shadow: 0 0 5px 0 rgba(187, 187, 187, 0.5);
    padding: 1.5rem 2rem;
    border-radius: 4px;
    text-align: center;

    &-title {
      display: block;
      color: #6e6e6e;
      margin-bottom: 10px;
      font-size: 20px;
    }

    b {
      display: block;
      margin-bottom: 20px;
      font-size: 20px;
    }

    p {
      margin-bottom: 20px;
      font-size: 17px;
    }

    a[role="button"] {
      width: 100%;
      height: auto;
      margin: 0;
      border-radius: 4px;
    }
  }

  &__continue-link {
    > * {
      width: 100%;
      text-align: center;
      display: block;
      margin: 5px 0;
    }
  }
}





.form-validation {
  position: relative;
  margin: $base-spacing 0;
  padding: $medium-spacing $medium-spacing $medium-spacing ( $large-spacing + $medium-spacing );
  border: solid 1px $non-black;
  border-radius: $base-border-radius;
  overflow: hidden; //hides border-radius corners of.icon-box

  .icon-box {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: $large-spacing;
    background-color: $non-black;
    background-position: center center;
    background-repeat: no-repeat;
    background-size: $base-spacing auto;
    text-align: center;
    padding-top: 1em;
  }

  h1,
  h2,
  h3,
  h4 {
    font-size: 1em;
    font-weight: $bold-font-weight;
    margin-top: 0;
  }

  > :last-child {
    margin-bottom: 0;
  }

  ul,
  ol {
    padding-left: 1.5em;
  }
}

.form-validation--type-error {
  border-color: $error-colour;

  .icon-box {
    background-color: $error-colour;
  }
}

.form-validation--type-warning {
  border-color: $warning-colour;

  .icon-box {
    background-color: $warning-colour;
  }
}

.form-validation--type-success {
  border-color: $success-colour;

  .icon-box {
    background-color: $success-colour;
  }
}

.form-validation--type-info {
  border-color: $info-colour;

  .icon-box {
    background-color: $light-blue;
    border-right: solid 1px $info-colour;

    svg {
      color: $info-colour;
      fill: $info-colour;
    }
  }
}


//==================

.field-validation-error {
  display: block;
  font-weight: $bold-font-weight;
  color: $error-colour;
  padding: $small-spacing $small-spacing $small-spacing $large-spacing ;
  background-color: $light-red;
  line-height: 1.2;
  background-position: $small-spacing center;
  background-repeat: no-repeat;
  background-size: $base-spacing auto;
  margin: $small-spacing auto;
}
